{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/archive.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","HeaderWrapper","styled","header","withConfig","displayName","componentId","HeaderContainer","div","Header","siteTitle","react_default","style","margin","gatsby_browser_entry","to","color","textDecoration","defaultProps","POST_ARCHIVE_QUERY","ArchiveContainer","aside","Archive","allMarkdownRemark","Fragment","edges","map","edge","index","key","node","frontmatter","slug","_70734414","MainLayout","main","Layout","site","siteMetadata","web","from","height","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_1006945595","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-a06cbb15bcf243987e06.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport styled from \"styled-components\"\n\nconst HeaderWrapper = styled.header`\n  background: coral;\n  margin-bottom: 1.45rem;\n  img {\n    margin-bottom: 0px;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1rem;\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nconst POST_ARCHIVE_QUERY = graphql`\r\n  query BlogPostArchive {\r\n    allMarkdownRemark(\r\n      limit: 5\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ArchiveContainer = styled.aside`\r\n  font-family: avenir;\r\n\r\n  text-align: center;\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: darkgrey;\r\n  }\r\n`\r\n\r\nfunction Archive() {\r\n  return (\r\n    <div>\r\n      <StaticQuery\r\n        query={POST_ARCHIVE_QUERY}\r\n        render={({ allMarkdownRemark }) => (\r\n          <>\r\n            <ArchiveContainer>\r\n              <h3>Archive</h3>\r\n              <ul>\r\n                {allMarkdownRemark.edges.map((edge, index) => (\r\n                  <li key={index}>\r\n                    {\" \"}\r\n                    <Link to={`/posts${edge.node.frontmatter.slug}`}>\r\n                      {\" \"}\r\n                      {edge.node.frontmatter.title}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </ArchiveContainer>\r\n          </>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Archive\r\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Spring } from \"react-spring\"\nimport Img from \"gatsby-image\"\n\nimport Header from \"./header\"\nimport Archive from \"./archive\"\nimport \"./layout.css\"\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-gap: 40px;\n`\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        file(relativePath: { regex: \"/bg/\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {/*  {location.pathname === \"/\" && (\n          <Img fluid={data.file.childImageSharp.fluid} />\n        )} */}\n        <Spring\n          from={{ height: location.pathname === \"/\" ? 100 : 200 }}\n          to={{ height: location.pathname === \"/\" ? 200 : 100 }}\n        >\n          {styles => (\n            <div style={{ overflow: \"hidden\", ...styles }}>\n              <Img fluid={data.file.childImageSharp.fluid} />\n            </div>\n          )}\n        </Spring>\n        <MainLayout>\n          <main>{children}</main>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}