{"version":3,"sources":["webpack:///./src/components/postLayout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/archive.js","webpack:///./src/components/layout.js"],"names":["postLayout","render","markdownRemark","this","props","data","location","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","frontmatter","title","date","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Component","query","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","HeaderWrapper","styled","header","withConfig","displayName","componentId","HeaderContainer","div","Header","siteTitle","react_default","style","margin","gatsby_browser_entry","color","textDecoration","defaultProps","POST_ARCHIVE_QUERY","ArchiveContainer","aside","Archive","allMarkdownRemark","Fragment","edges","map","edge","index","key","node","slug","_70734414","MainLayout","main","Layout","site","siteMetadata","web","from","height","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_1006945595"],"mappings":"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","file":"component---src-components-post-layout-js-48107951edbe7f0a14c3.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\n\r\nexport default class postLayout extends Component {\r\n  render() {\r\n    const { markdownRemark } = this.props.data\r\n    const { location } = this.props\r\n    return (\r\n      <Layout location={location}>\r\n        <div>\r\n          <h1>{markdownRemark.frontmatter.title}</h1>\r\n          <h2>{markdownRemark.frontmatter.date}</h2>\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: markdownRemark.html,\r\n            }}\r\n          />\r\n        </div>\r\n        <Link to=\"/\">Go Home</Link>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n/* This export is the page query. Thanks to this, the data is accesible\r\non the component via props.data*/\r\n\r\nexport const query = graphql`\r\n  query PostQuery($slug: String!) {\r\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport styled from \"styled-components\"\n\nconst HeaderWrapper = styled.header`\n  background: coral;\n  margin-bottom: 1.45rem;\n  img {\n    margin-bottom: 0px;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1rem;\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nconst POST_ARCHIVE_QUERY = graphql`\r\n  query BlogPostArchive {\r\n    allMarkdownRemark(\r\n      limit: 5\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ArchiveContainer = styled.aside`\r\n  font-family: avenir;\r\n\r\n  text-align: center;\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: darkgrey;\r\n  }\r\n`\r\n\r\nfunction Archive() {\r\n  return (\r\n    <div>\r\n      <StaticQuery\r\n        query={POST_ARCHIVE_QUERY}\r\n        render={({ allMarkdownRemark }) => (\r\n          <>\r\n            <ArchiveContainer>\r\n              <h3>Archive</h3>\r\n              <ul>\r\n                {allMarkdownRemark.edges.map((edge, index) => (\r\n                  <li key={index}>\r\n                    {\" \"}\r\n                    <Link to={`/posts${edge.node.frontmatter.slug}`}>\r\n                      {\" \"}\r\n                      {edge.node.frontmatter.title}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </ArchiveContainer>\r\n          </>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Archive\r\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Spring } from \"react-spring\"\nimport Img from \"gatsby-image\"\n\nimport Header from \"./header\"\nimport Archive from \"./archive\"\nimport \"./layout.css\"\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-gap: 40px;\n`\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        file(relativePath: { regex: \"/bg/\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {/*  {location.pathname === \"/\" && (\n          <Img fluid={data.file.childImageSharp.fluid} />\n        )} */}\n        <Spring\n          from={{ height: location.pathname === \"/\" ? 100 : 200 }}\n          to={{ height: location.pathname === \"/\" ? 200 : 100 }}\n        >\n          {styles => (\n            <div style={{ overflow: \"hidden\", ...styles }}>\n              <Img fluid={data.file.childImageSharp.fluid} />\n            </div>\n          )}\n        </Spring>\n        <MainLayout>\n          <main>{children}</main>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n"],"sourceRoot":""}